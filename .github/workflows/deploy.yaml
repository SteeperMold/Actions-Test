name: Deploy App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to deploy"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      HOST: ${{ vars.HOST }}
      DEPLOY_DIRECTORY: /root/apps/transport-engineers

    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Checkout backend
        uses: actions/checkout@v3
        with:
          ref: backend
          path: backend

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23.0

      - name: Build go app
        run: |
          cd backend
          go mod download
          go build -o transport-engineers ./cmd/main.go
          cd ..

      - name: Checkout frontend
        uses: actions/checkout@v3
        with:
          ref: frontend
          path: frontend

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.16.0

      - name: Build frontend
        run: |
          cd frontend
          npm install
          CI=false npm run build
          cd ..

      - name: Delete old source code
        run: |
          sudo apt-get install -y ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "
            if [ -d '${{ env.DEPLOY_DIRECTORY }}' ]; then
              rm -rf '${{ env.DEPLOY_DIRECTORY }}'
            fi
          "

      - name: Deploy to VM
        run: |
          ls
          sudo apt-get install -y rsync
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' \
            backend/transport-engineers \
            backend/.env \
            ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}/backend/
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' \
            frontend/build/ \
            ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}/frontend/

      - name: Remove old systemd service file
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "rm -f /etc/systemd/system/transport-engineers.service"

      - name: Copy systemd service file
        run: |
          scp -i deploy_key.pem -o StrictHostKeyChecking=no \
            ${{ github.workspace }}/deployment/transport-engineers.service \
            ${{ env.HOST }}:/tmp/transport-engineers.service
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "mv /tmp/transport-engineers.service /etc/systemd/system/transport-engineers.service"

      - name: Start application
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} \
            "systemctl daemon-reload && systemctl restart transport-engineers.service && systemctl restart nginx"
